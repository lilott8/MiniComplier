//
// Generated by JTB 1.3.2
//

package bioscript.ast;

import bioscript.visitor.GJNoArguVisitor;
import bioscript.visitor.GJVisitor;
import bioscript.visitor.GJVoidVisitor;
import bioscript.visitor.Visitor;


/**
 * Grammar production: f0 -> Stationary() f1 -> Manifest() f2 -> <INSTRUCTIONS> f3 -> Instruction()
 */
public class Program implements Node {
    public Stationary f0;
    public Manifest f1;
    public NodeToken f2;
    public Instruction f3;

    public Program(Stationary n0, Manifest n1, NodeToken n2, Instruction n3) {
        f0 = n0;
        f1 = n1;
        f2 = n2;
        f3 = n3;
    }

    public Program(Stationary n0, Manifest n1, Instruction n2) {
        f0 = n0;
        f1 = n1;
        f2 = new NodeToken("instructions");
        f3 = n2;
    }

    public void accept(Visitor v) {
        v.visit(this);
    }

    public <R, A> R accept(GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    public <R> R accept(GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    public <A> void accept(GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}

