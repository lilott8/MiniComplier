//
// Generated by JTB 1.3.2
//

package bioscript.ast;

import bioscript.visitor.GJNoArguVisitor;
import bioscript.visitor.GJVisitor;
import bioscript.visitor.GJVoidVisitor;
import bioscript.visitor.Visitor;


/**
 * Grammar production: f0 -> Identifier() f1 -> <ASSIGN> f2 -> Expression()
 */
public class AssignmentStatement implements Node {
    public Identifier f0;
    public NodeToken f1;
    public Expression f2;

    public AssignmentStatement(Identifier n0, NodeToken n1, Expression n2) {
        f0 = n0;
        f1 = n1;
        f2 = n2;
    }

    public AssignmentStatement(Identifier n0, Expression n1) {
        f0 = n0;
        f1 = new NodeToken("=");
        f2 = n1;
    }

    public void accept(Visitor v) {
        v.visit(this);
    }

    public <R, A> R accept(GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    public <R> R accept(GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    public <A> void accept(GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}

