//
// Generated by JTB 1.3.2
//

package bioscript.ast;

import bioscript.visitor.GJNoArguVisitor;
import bioscript.visitor.GJVisitor;
import bioscript.visitor.GJVoidVisitor;
import bioscript.visitor.Visitor;


/**
 * Grammar production: f0 -> <DRAIN> f1 -> PrimaryExpression()
 */
public class DrainStatement implements Node {
    public NodeToken f0;
    public PrimaryExpression f1;

    public DrainStatement(NodeToken n0, PrimaryExpression n1) {
        f0 = n0;
        f1 = n1;
    }

    public DrainStatement(PrimaryExpression n0) {
        f0 = new NodeToken("drain");
        f1 = n0;
    }

    public void accept(Visitor v) {
        v.visit(this);
    }

    public <R, A> R accept(GJVisitor<R, A> v, A argu) {
        return v.visit(this, argu);
    }

    public <R> R accept(GJNoArguVisitor<R> v) {
        return v.visit(this);
    }

    public <A> void accept(GJVoidVisitor<A> v, A argu) {
        v.visit(this, argu);
    }
}

