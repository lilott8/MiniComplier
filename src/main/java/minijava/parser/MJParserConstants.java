/* Generated By:JavaCC: Do not edit this line. MJParserConstants.java */
package minijava.parser;


/**
 * Token literal values and constants. Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MJParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int SINGLE_LINE_COMMENT = 6;
    /**
     * RegularExpression Id.
     */
    int FORMAL_COMMENT = 7;
    /**
     * RegularExpression Id.
     */
    int MULTI_LINE_COMMENT = 8;
    /**
     * RegularExpression Id.
     */
    int LPAREN = 9;
    /**
     * RegularExpression Id.
     */
    int RPAREN = 10;
    /**
     * RegularExpression Id.
     */
    int LSQPAREN = 11;
    /**
     * RegularExpression Id.
     */
    int RSQPAREN = 12;
    /**
     * RegularExpression Id.
     */
    int LBRACE = 13;
    /**
     * RegularExpression Id.
     */
    int RBRACE = 14;
    /**
     * RegularExpression Id.
     */
    int SEMICOLON = 15;
    /**
     * RegularExpression Id.
     */
    int DOT = 16;
    /**
     * RegularExpression Id.
     */
    int ASSIGN = 17;
    /**
     * RegularExpression Id.
     */
    int EQUALITY = 18;
    /**
     * RegularExpression Id.
     */
    int NOTEQUAL = 19;
    /**
     * RegularExpression Id.
     */
    int LT = 20;
    /**
     * RegularExpression Id.
     */
    int LTE = 21;
    /**
     * RegularExpression Id.
     */
    int GT = 22;
    /**
     * RegularExpression Id.
     */
    int GTE = 23;
    /**
     * RegularExpression Id.
     */
    int PLUS = 24;
    /**
     * RegularExpression Id.
     */
    int MINUS = 25;
    /**
     * RegularExpression Id.
     */
    int MULTIPLY = 26;
    /**
     * RegularExpression Id.
     */
    int AND = 27;
    /**
     * RegularExpression Id.
     */
    int NOT = 28;
    /**
     * RegularExpression Id.
     */
    int BOOLEAN = 29;
    /**
     * RegularExpression Id.
     */
    int CLASS = 30;
    /**
     * RegularExpression Id.
     */
    int INTERFACE = 31;
    /**
     * RegularExpression Id.
     */
    int ELSE = 32;
    /**
     * RegularExpression Id.
     */
    int ELSE_IF = 33;
    /**
     * RegularExpression Id.
     */
    int EXTENDS = 34;
    /**
     * RegularExpression Id.
     */
    int FALSE = 35;
    /**
     * RegularExpression Id.
     */
    int IF = 36;
    /**
     * RegularExpression Id.
     */
    int WHILE = 37;
    /**
     * RegularExpression Id.
     */
    int INTEGER = 38;
    /**
     * RegularExpression Id.
     */
    int LENGTH = 39;
    /**
     * RegularExpression Id.
     */
    int MAIN = 40;
    /**
     * RegularExpression Id.
     */
    int NEW = 41;
    /**
     * RegularExpression Id.
     */
    int PUBLIC = 42;
    /**
     * RegularExpression Id.
     */
    int RETURN = 43;
    /**
     * RegularExpression Id.
     */
    int STATIC = 44;
    /**
     * RegularExpression Id.
     */
    int STRING = 45;
    /**
     * RegularExpression Id.
     */
    int THIS = 46;
    /**
     * RegularExpression Id.
     */
    int TRUE = 47;
    /**
     * RegularExpression Id.
     */
    int PRINT = 48;
    /**
     * RegularExpression Id.
     */
    int VOID = 49;
    /**
     * RegularExpression Id.
     */
    int COMMA = 50;
    /**
     * RegularExpression Id.
     */
    int INTEGER_LITERAL = 51;
    /**
     * RegularExpression Id.
     */
    int IDENTIFIER = 52;
    /**
     * RegularExpression Id.
     */
    int LETTER = 53;
    /**
     * RegularExpression Id.
     */
    int DIGIT = 54;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\n\"",
            "\"\\r\"",
            "\"\\f\"",
            "<SINGLE_LINE_COMMENT>",
            "<FORMAL_COMMENT>",
            "<MULTI_LINE_COMMENT>",
            "\"(\"",
            "\")\"",
            "\"[\"",
            "\"]\"",
            "\"{\"",
            "\"}\"",
            "\";\"",
            "\".\"",
            "\"=\"",
            "\"==\"",
            "\"!=\"",
            "\"<\"",
            "\"<=\"",
            "\">\"",
            "\">=\"",
            "\"+\"",
            "\"-\"",
            "\"*\"",
            "\"&&\"",
            "\"!\"",
            "\"boolean\"",
            "\"class\"",
            "\"interface\"",
            "\"else\"",
            "\"else if\"",
            "\"extends\"",
            "\"false\"",
            "\"if\"",
            "\"while\"",
            "\"int\"",
            "\"length\"",
            "\"main\"",
            "\"new\"",
            "\"public\"",
            "\"return\"",
            "\"static\"",
            "\"String\"",
            "\"this\"",
            "\"true\"",
            "\"System.out.println\"",
            "\"void\"",
            "\",\"",
            "<INTEGER_LITERAL>",
            "<IDENTIFIER>",
            "<LETTER>",
            "<DIGIT>",
    };

}
