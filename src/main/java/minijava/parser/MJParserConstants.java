/* Generated By:JavaCC: Do not edit this line. MJParserConstants.java */

package minijava.parser;

/**
 * bioscript.parser.Token literal values and constants. Generated by
 * org.javacc.parser.OtherFilesGen#start()
 */
public interface MJParserConstants {

    /**
     * End of File.
     */
    int EOF = 0;
    /**
     * RegularExpression Id.
     */
    int BOOLEAN = 6;
    /**
     * RegularExpression Id.
     */
    int BREAK = 7;
    /**
     * RegularExpression Id.
     */
    int CLASS = 8;
    /**
     * RegularExpression Id.
     */
    int CONTINUE = 9;
    /**
     * RegularExpression Id.
     */
    int DO = 10;
    /**
     * RegularExpression Id.
     */
    int ELSE = 11;
    /**
     * RegularExpression Id.
     */
    int EXTENDS = 12;
    /**
     * RegularExpression Id.
     */
    int FALSE = 13;
    /**
     * RegularExpression Id.
     */
    int FOR = 14;
    /**
     * RegularExpression Id.
     */
    int IF = 15;
    /**
     * RegularExpression Id.
     */
    int INT = 16;
    /**
     * RegularExpression Id.
     */
    int MAIN = 17;
    /**
     * RegularExpression Id.
     */
    int NEW = 18;
    /**
     * RegularExpression Id.
     */
    int PRIVATE = 19;
    /**
     * RegularExpression Id.
     */
    int PROTECTED = 20;
    /**
     * RegularExpression Id.
     */
    int PRINT = 21;
    /**
     * RegularExpression Id.
     */
    int PUBLIC = 22;
    /**
     * RegularExpression Id.
     */
    int RETURN = 23;
    /**
     * RegularExpression Id.
     */
    int STATIC = 24;
    /**
     * RegularExpression Id.
     */
    int STRING = 25;
    /**
     * RegularExpression Id.
     */
    int SUPER = 26;
    /**
     * RegularExpression Id.
     */
    int THIS = 27;
    /**
     * RegularExpression Id.
     */
    int TRUE = 28;
    /**
     * RegularExpression Id.
     */
    int VOID = 29;
    /**
     * RegularExpression Id.
     */
    int WHILE = 30;
    /**
     * RegularExpression Id.
     */
    int DOTLENGTH = 31;
    /**
     * RegularExpression Id.
     */
    int IDENTIFIER = 32;
    /**
     * RegularExpression Id.
     */
    int INT_SCALAR = 33;
    /**
     * RegularExpression Id.
     */
    int LETTER = 34;
    /**
     * RegularExpression Id.
     */
    int DIGIT = 35;
    /**
     * RegularExpression Id.
     */
    int LPAREN = 36;
    /**
     * RegularExpression Id.
     */
    int RPAREN = 37;
    /**
     * RegularExpression Id.
     */
    int LBRACKET = 38;
    /**
     * RegularExpression Id.
     */
    int RBRACKET = 39;
    /**
     * RegularExpression Id.
     */
    int LBRACE = 40;
    /**
     * RegularExpression Id.
     */
    int RBRACE = 41;
    /**
     * RegularExpression Id.
     */
    int ADD = 42;
    /**
     * RegularExpression Id.
     */
    int AND = 43;
    /**
     * RegularExpression Id.
     */
    int ASSIGN = 44;
    /**
     * RegularExpression Id.
     */
    int BANG = 45;
    /**
     * RegularExpression Id.
     */
    int COMMA = 46;
    /**
     * RegularExpression Id.
     */
    int DOT = 47;
    /**
     * RegularExpression Id.
     */
    int LESSTHAN = 48;
    /**
     * RegularExpression Id.
     */
    int GREATERTHAN = 49;
    /**
     * RegularExpression Id.
     */
    int MINUS = 50;
    /**
     * RegularExpression Id.
     */
    int MULTIPLY = 51;
    /**
     * RegularExpression Id.
     */
    int DIVIDE = 52;
    /**
     * RegularExpression Id.
     */
    int SEMICOLON = 53;
    /**
     * RegularExpression Id.
     */
    int OR = 54;

    /**
     * Lexical state.
     */
    int DEFAULT = 0;

    /**
     * Literal token values.
     */
    String[] tokenImage = {
            "<EOF>",
            "\" \"",
            "\"\\t\"",
            "\"\\n\"",
            "\"\\r\"",
            "\"\\f\"",
            "\"boolean\"",
            "\"break\"",
            "\"class\"",
            "\"continue\"",
            "\"do\"",
            "\"else\"",
            "\"extends\"",
            "\"false\"",
            "\"for\"",
            "\"if\"",
            "\"int\"",
            "\"main\"",
            "\"new\"",
            "\"private\"",
            "\"protected\"",
            "\"print\"",
            "\"public\"",
            "\"return\"",
            "\"static\"",
            "\"String\"",
            "\"super\"",
            "\"this\"",
            "\"true\"",
            "\"void\"",
            "\"while\"",
            "\".length\"",
            "<IDENTIFIER>",
            "<INT_SCALAR>",
            "<LETTER>",
            "<DIGIT>",
            "\"(\"",
            "\")\"",
            "\"[\"",
            "\"]\"",
            "\"{\"",
            "\"}\"",
            "\"+\"",
            "\"&&\"",
            "\"=\"",
            "\"!\"",
            "\",\"",
            "\".\"",
            "\"<\"",
            "\">\"",
            "\"-\"",
            "\"*\"",
            "\"/\"",
            "\";\"",
            "\"||\"",
    };

}
